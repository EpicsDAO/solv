{"pageProps":{"article":{"title":"第3章: 🌐💰 クラウド活用の全貌: Solana バリデーターの効率的モニタリングとステイキングリワードの管理 🚀🔍","description":"この章では、クラウドの力を最大限に活用して、Solana バリデーターのモニタリングとステイキングリワードの管理を効率的に行う方法を探ります。","content":"\nこの章では、クラウドの力を最大限に活用して、Solana バリデーターのモニタリングとステイキングリワードの管理を効率的に行う方法を探ります。私たちは、`Firebase Functions` の無料枠内で実装を行うことを目標に、`Skeet Framework` という革新的なサーバーレスフレームワークを使用します。このフレームワークを用いることで、リソースの最適化を図りつつ、バリデーターのパフォーマンス監視やリワード追跡をより簡単かつコスト効率よく行うことが可能になります。章を進めるにつれて、`Firebase` と `Skeet Framework` を駆使して、これらの重要なプロセスをどのように実装するかを、実例を交えて詳細に解説していきます。\n\nこの章では `Cloud Functions for Firebase` とサーバーレスフレームワーク `Skeet` を使用します。\n\nhttps://firebase.google.com/docs/functions\n\nhttps://skeet.dev/ja\n\n## 🚀 Firebase Functions のデプロイ\n\nまずは `Cloud Functions for Firebase` をデプロイします。\nこの開発環境の準備は以下の章を参考にデプロイをしてください。\n\nhttps://zenn.dev/fumisouls/books/a27314e5a8428d/viewer/fdeb74\n\n## 📩 Discord ウェブフック URL の取得\n\n通知を受信したいチャンネルを右クリックして Webhook を作成します。\nそして、Webhook URL をメモしておきます。\n\n![](https://storage.googleapis.com/zenn-user-upload/da936f953ead-20231122.png)\n\n## 🛰️ バリデーター監視用のエンドポイントの追加\n\n作成した `skeet framework` のルートディレクトリで、\n`skeet add method` コマンドを実行します。\n\n定期実行を行うので `schedule` を選択します。\n\n```bash\nskeet add method solvMonitor\n? Select Instance Type to add\n   = Instance Type =\n  http\n  firestore\n  pubsub\n❯ schedule\n  auth\n✔ ./functions/skeet/src/routings/schedule/solvMonitor.ts created 🎉\n✔ Successfully exported to ./functions/skeet/src/index.ts 🎉\n```\n\n`solvMonitor` という `Cloud Functions for Firebase` のテンプレートが作成されました。\n\n`solvMonitor.ts`\n\n```ts\nimport { onSchedule } from 'firebase-functions/v2/scheduler'\nimport { scheduleDefaultOption } from '@/routings/options'\n\nexport const solvMonitor = onSchedule(scheduleDefaultOption, async (event) => {\n  try {\n    console.log({ status: 'success' })\n  } catch (error) {\n    console.log({ status: 'error', message: String(error) })\n  }\n})\n```\n\n## 🧠 バリデーター監視用のロジックの追加\n\nまずは必要な npm パッケージを追加します。\n\n```bash\nskeet yarn add -p @skeet-framework/solana-utils\n? Select Services to run yarn command (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to\nproceed)\n  = Services =\n❯◯ skeet\n```\n\nスペースキーで追加する functions ディレクトリを選択します。\n\n次に先ほど取得した Discord の Webhook URL を Secret Manager へ追加します。\n\n```bash\nskeet add secret DISCORD_WEBHOOK_URL\n? Enter a value for DISCORD_WEBHOOK_URL [hidden]\n✔  Created a new secret version projects/1012380258xx/secrets/DISCORD_WEBHOOK_URL/versions/1\n```\n\nそして以下のように、`solvMonitor` を更新します。\n\n```ts\nimport { onSchedule } from 'firebase-functions/v2/scheduler'\nimport { scheduleDefaultOption } from '@/routings/options'\nimport { defineSecret } from 'firebase-functions/params'\nimport {\n  ValidatorStatusParams,\n  isValidatorActive,\n} from '@skeet-framework/solana-utils'\nimport { sendDiscord } from '@skeet-framework/utils'\n\nconst DISCORD_WEBHOOK_URL = defineSecret('DISCORD_WEBHOOK_URL')\n\nexport const solvMonitor = onSchedule(\n  { ...scheduleDefaultOption, secrets: [DISCORD_WEBHOOK_URL] },\n  async (event) => {\n    try {\n      const endpoint = 'https://api.testnet.solana.com'\n      const voteAccountPubkey = '<your-vote-account-pubkey>'\n      const result: ValidatorStatusParams = await isValidatorActive(\n        endpoint,\n        voteAccountPubkey\n      )\n      const content = `Validator: ${voteAccountPubkey}\\nStatus${\n        result.isActive ? 'active' : 'inactive'\n      }\\nMessage: ${result.reason}`\n      await sendDiscord(content, {\n        webhookUrl: DISCORD_WEBHOOK_URL.value(),\n        username: 'Skeet Solana Monitor',\n      })\n      console.log({ result })\n      console.log({ status: 'success' })\n    } catch (error) {\n      console.log({ status: 'error', message: String(error) })\n    }\n  }\n)\n```\n\nバリデーター監視用のロジックを以下のように追加します。\n\n## 🚀 バリデーター監視用のロジックのデプロイ\n\nそして `skeet deploy` コマンドでモニターアプリをデプロイします。\n\n```bash\n? Select Functions to deploy (Press <space> to select, <a> to toggle all, <i> to invert selection, and <enter> to proceed)\n  = Functions =\n ◯ root\n❯◉ solvMonitor\n```\n\n`solvMonitor`を選択し、`Cloud Functions for Firebase` へデプロイします。\n\n次に以下の `Cloud Scheduler` のコンソールから実行します。\n\nhttps://console.cloud.google.com/cloudscheduler\n\n右にある`Actions`から `Force run` をクリックすることでテストすることができます。\n\n![](https://storage.googleapis.com/zenn-user-upload/b7e5b17d4be5-20231122.png)\n\n無事に成功すると、\n\n![](https://storage.googleapis.com/zenn-user-upload/5125848e30dd-20231122.png)\n\nディスコードに通知が届きました 🎉\n\n## ⏲️ 定期実行時間の設定\n\nデフォルトでは以下のディレクトリに設定オプションが定義されています。\n\n`functions/skeet/src/routings/options/scheduleOptions.ts`\n\n```ts\nimport { ScheduleOptions } from 'firebase-functions/v2/scheduler'\nimport skeetOptions from '../../../skeetOptions.json'\n\nconst appName = skeetOptions.name\nconst project = skeetOptions.projectId\nconst region = skeetOptions.region\nconst serviceAccount = `${appName}@${project}.iam.gserviceaccount.com`\nconst vpcConnector = `${appName}-con`\n\nexport const scheduleDefaultOption: ScheduleOptions = {\n  region,\n  schedule: 'every 1 hours',\n  timeZone: 'UTC',\n  retryCount: 3,\n  maxRetrySeconds: 60,\n  minBackoffSeconds: 1,\n  maxBackoffSeconds: 10,\n  serviceAccount,\n  timeoutSeconds: 540,\n  labels: {\n    skeet: 'schedule',\n  },\n}\n```\n\nデフォルトでは 毎時間に実行されるようになっているので、\n`schedule` の値を任意のものへ変更してください。\n\nschedule 設定の詳細\n\nhttps://cloud.google.com/scheduler/docs/configuring/cron-job-schedules\n\n## 🌐 ステイキング報酬監視用のエンドポイントの追加\n\n同様に、今度はステイキング報酬の確認用に新しい機能を追加します。\n\n```bash\nskeet add method stakeMonitor\n? Select Instance Type to add\n   = Instance Type =\n  http\n  firestore\n  pubsub\n❯ schedule\n  auth\n✔ ./functions/skeet/src/routings/schedule/stakeMonitor.ts created 🎉\n✔ Successfully exported to ./functions/skeet/src/index.ts 🎉\n```\n\n`stakingMonitor` という `Cloud Functions for Firebase` のテンプレートが作成されました。\n\n`stakingMonitor.ts`\n\n```ts\nimport { onSchedule } from 'firebase-functions/v2/scheduler'\nimport { scheduleDefaultOption } from '@/routings/options'\n\nexport const stakingMonitor = onSchedule(\n  scheduleDefaultOption,\n  async (event) => {\n    try {\n      console.log({ status: 'success' })\n    } catch (error) {\n      console.log({ status: 'error', message: String(error) })\n    }\n  }\n)\n```\n\n## 🔗 Solana の RPC エンドポイントについて\n\nSolana の公式 RPC エンドポイント `https://api.mainnet-beta.solana.com` はレート制限が設けられているため、より安定したデータアクセスを実現するにはプライベート RPC の使用が推奨されます。\nこの目的のために、私たちは Helius の RPC サービスを利用し、そのエンドポイント情報をシークレットマネージャーに安全に保存する方法を紹介します。\n\nhttps://www.helius.dev/\n\n以下のコマンドを使用して、Helius RPC エンドポイントをシークレットマネージャーに登録します：\n\n```bash\nskeet add secret HELIUS_ENDPOINT\n? Enter a value for HELIUS_ENDPOINT [hidden]\n```\n\nこの手順により、アプリケーションは Helius のプライベート RPC を通じて、より効率的に Solana ネットワークにアクセスし、レート制限の影響を受けずに安定したデータを取得できるようになります。\n\n## 💡 ステイキング報酬監視用のロジックの追加\n\nそして以下のように、`stakingMonitor` を更新します。\n\n```ts\nimport { onSchedule } from 'firebase-functions/v2/scheduler'\nimport { schedulePublicOption } from '@/routings/options'\nimport {\n  RewardDataResponse,\n  getAllStakeRewardsByPubkey,\n} from '@skeet-framework/solana-utils'\nimport { defineSecret } from 'firebase-functions/params'\nimport { sendDiscord } from '@skeet-framework/utils'\n\nconst DISCORD_WEBHOOK_URL = defineSecret('DISCORD_WEBHOOK_URL')\nconst HELIUS_ENDPOINT = defineSecret('HELIUS_ENDPOINT')\n\nexport const stakeMonitor = onSchedule(\n  { ...schedulePublicOption, secrets: [DISCORD_WEBHOOK_URL, HELIUS_ENDPOINT] },\n  async (event) => {\n    try {\n      const walletPubkey = 'LKnGHsjr7UYBXnzfbrz4k6QotCz56rMQTSiVwdRSyL9'\n      const result: RewardDataResponse = await getAllStakeRewardsByPubkey(\n        HELIUS_ENDPOINT.value(),\n        walletPubkey\n      )\n      const content = `Account: ${walletPubkey}\nEpoch: ${result.epoch}\nReward: ${result.totalRewardAmount} SOL\nTotal SOL: ${result.totalBalance} SOL\n`\n      await sendDiscord(content, {\n        webhookUrl: DISCORD_WEBHOOK_URL.value(),\n        username: 'Skeet Staking Monitor',\n      })\n      console.log({ status: 'success' })\n    } catch (error) {\n      console.log({ status: 'error', message: String(error) })\n    }\n  }\n)\n```\n\n## 📤 ステイキング報酬監視用のロジックのデプロイ\n\n同様に `skeet deploy` コマンドでモニターアプリをデプロイします。\n\n```bash\nskeet deploy --function skeet:stakeMonitor\n```\n\n`--function` オプションをつけてデプロイする functions を指定することもできます。\n\n同様に、Cloud Scheduler から実行してみます。\n\n![](https://storage.googleapis.com/zenn-user-upload/446a191fdf48-20231123.png)\n\n無事に通知が届きました 🎉\n\n![](https://storage.googleapis.com/zenn-user-upload/7ba0331573c5-20231123.png)\n\n次の章では `Firestrore`　と `Google スプレッドシート`　を使ってより便利にデータを管理していきたいと思います。\n"},"articleHtml":"<p>この章では、クラウドの力を最大限に活用して、Solana バリデーターのモニタリングとステイキングリワードの管理を効率的に行う方法を探ります。私たちは、<code>Firebase Functions</code> の無料枠内で実装を行うことを目標に、<code>Skeet Framework</code> という革新的なサーバーレスフレームワークを使用します。このフレームワークを用いることで、リソースの最適化を図りつつ、バリデーターのパフォーマンス監視やリワード追跡をより簡単かつコスト効率よく行うことが可能になります。章を進めるにつれて、<code>Firebase</code> と <code>Skeet Framework</code> を駆使して、これらの重要なプロセスをどのように実装するかを、実例を交えて詳細に解説していきます。</p>\n<p>この章では <code>Cloud Functions for Firebase</code> とサーバーレスフレームワーク <code>Skeet</code> を使用します。</p>\n<p><a href=\"https://firebase.google.com/docs/functions\" target=\"_blank\" rel=\"noopener noreferrer\">https://firebase.google.com/docs/functions</a></p>\n<p><a href=\"https://skeet.dev/ja\" target=\"_blank\" rel=\"noopener noreferrer\">https://skeet.dev/ja</a></p>\n<h2 id=\"-firebase-functions-のデプロイ\" class=\"font-extrabold tracking-tighter break-word\">🚀 Firebase Functions のデプロイ</h2>\n<p>まずは <code>Cloud Functions for Firebase</code> をデプロイします。\nこの開発環境の準備は以下の章を参考にデプロイをしてください。</p>\n<p><a href=\"https://zenn.dev/fumisouls/books/a27314e5a8428d/viewer/fdeb74\" target=\"_blank\" rel=\"noopener noreferrer\">https://zenn.dev/fumisouls/books/a27314e5a8428d/viewer/fdeb74</a></p>\n<h2 id=\"-discord-ウェブフック-url-の取得\" class=\"font-extrabold tracking-tighter break-word\">📩 Discord ウェブフック URL の取得</h2>\n<p>通知を受信したいチャンネルを右クリックして Webhook を作成します。\nそして、Webhook URL をメモしておきます。</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/da936f953ead-20231122.png\" alt=\"\"></p>\n<h2 id=\"️-バリデーター監視用のエンドポイントの追加\" class=\"font-extrabold tracking-tighter break-word\">🛰️ バリデーター監視用のエンドポイントの追加</h2>\n<p>作成した <code>skeet framework</code> のルートディレクトリで、\n<code>skeet add method</code> コマンドを実行します。</p>\n<p>定期実行を行うので <code>schedule</code> を選択します。</p>\n<pre><code class=\"hljs language-bash\">skeet add method solvMonitor\n? Select Instance Type to add\n   = Instance Type =\n  http\n  firestore\n  pubsub\n❯ schedule\n  auth\n✔ ./functions/skeet/src/routings/schedule/solvMonitor.ts created 🎉\n✔ Successfully exported to ./functions/skeet/src/index.ts 🎉\n</code></pre>\n<p><code>solvMonitor</code> という <code>Cloud Functions for Firebase</code> のテンプレートが作成されました。</p>\n<p><code>solvMonitor.ts</code></p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> { onSchedule } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'firebase-functions/v2/scheduler'</span>\n<span class=\"hljs-keyword\">import</span> { scheduleDefaultOption } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@/routings/options'</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> solvMonitor = <span class=\"hljs-title function_\">onSchedule</span>(scheduleDefaultOption, <span class=\"hljs-keyword\">async</span> (event) => {\n  <span class=\"hljs-keyword\">try</span> {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'success'</span> })\n  } <span class=\"hljs-keyword\">catch</span> (error) {\n    <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'error'</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-title class_\">String</span>(error) })\n  }\n})\n</code></pre>\n<h2 id=\"-バリデーター監視用のロジックの追加\" class=\"font-extrabold tracking-tighter break-word\">🧠 バリデーター監視用のロジックの追加</h2>\n<p>まずは必要な npm パッケージを追加します。</p>\n<pre><code class=\"hljs language-bash\">skeet yarn add -p @skeet-framework/solana-utils\n? Select Services to run yarn <span class=\"hljs-built_in\">command</span> (Press &#x3C;space> to <span class=\"hljs-keyword\">select</span>, &#x3C;a> to toggle all, &#x3C;i> to invert selection, and &#x3C;enter> to\nproceed)\n  = Services =\n❯◯ skeet\n</code></pre>\n<p>スペースキーで追加する functions ディレクトリを選択します。</p>\n<p>次に先ほど取得した Discord の Webhook URL を Secret Manager へ追加します。</p>\n<pre><code class=\"hljs language-bash\">skeet add secret DISCORD_WEBHOOK_URL\n? Enter a value <span class=\"hljs-keyword\">for</span> DISCORD_WEBHOOK_URL [hidden]\n✔  Created a new secret version projects/1012380258xx/secrets/DISCORD_WEBHOOK_URL/versions/1\n</code></pre>\n<p>そして以下のように、<code>solvMonitor</code> を更新します。</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> { onSchedule } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'firebase-functions/v2/scheduler'</span>\n<span class=\"hljs-keyword\">import</span> { scheduleDefaultOption } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@/routings/options'</span>\n<span class=\"hljs-keyword\">import</span> { defineSecret } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'firebase-functions/params'</span>\n<span class=\"hljs-keyword\">import</span> {\n  <span class=\"hljs-title class_\">ValidatorStatusParams</span>,\n  isValidatorActive,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@skeet-framework/solana-utils'</span>\n<span class=\"hljs-keyword\">import</span> { sendDiscord } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@skeet-framework/utils'</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">DISCORD_WEBHOOK_URL</span> = <span class=\"hljs-title function_\">defineSecret</span>(<span class=\"hljs-string\">'DISCORD_WEBHOOK_URL'</span>)\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> solvMonitor = <span class=\"hljs-title function_\">onSchedule</span>(\n  { ...scheduleDefaultOption, <span class=\"hljs-attr\">secrets</span>: [<span class=\"hljs-variable constant_\">DISCORD_WEBHOOK_URL</span>] },\n  <span class=\"hljs-keyword\">async</span> (event) => {\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-keyword\">const</span> endpoint = <span class=\"hljs-string\">'https://api.testnet.solana.com'</span>\n      <span class=\"hljs-keyword\">const</span> voteAccountPubkey = <span class=\"hljs-string\">'&#x3C;your-vote-account-pubkey>'</span>\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">result</span>: <span class=\"hljs-title class_\">ValidatorStatusParams</span> = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">isValidatorActive</span>(\n        endpoint,\n        voteAccountPubkey\n      )\n      <span class=\"hljs-keyword\">const</span> content = <span class=\"hljs-string\">`Validator: <span class=\"hljs-subst\">${voteAccountPubkey}</span>\\nStatus<span class=\"hljs-subst\">${\n        result.isActive ? <span class=\"hljs-string\">'active'</span> : <span class=\"hljs-string\">'inactive'</span>\n      }</span>\\nMessage: <span class=\"hljs-subst\">${result.reason}</span>`</span>\n      <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">sendDiscord</span>(content, {\n        <span class=\"hljs-attr\">webhookUrl</span>: <span class=\"hljs-variable constant_\">DISCORD_WEBHOOK_URL</span>.<span class=\"hljs-title function_\">value</span>(),\n        <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'Skeet Solana Monitor'</span>,\n      })\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ result })\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'success'</span> })\n    } <span class=\"hljs-keyword\">catch</span> (error) {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'error'</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-title class_\">String</span>(error) })\n    }\n  }\n)\n</code></pre>\n<p>バリデーター監視用のロジックを以下のように追加します。</p>\n<h2 id=\"-バリデーター監視用のロジックのデプロイ\" class=\"font-extrabold tracking-tighter break-word\">🚀 バリデーター監視用のロジックのデプロイ</h2>\n<p>そして <code>skeet deploy</code> コマンドでモニターアプリをデプロイします。</p>\n<pre><code class=\"hljs language-bash\">? Select Functions to deploy (Press &#x3C;space> to <span class=\"hljs-keyword\">select</span>, &#x3C;a> to toggle all, &#x3C;i> to invert selection, and &#x3C;enter> to proceed)\n  = Functions =\n ◯ root\n❯◉ solvMonitor\n</code></pre>\n<p><code>solvMonitor</code>を選択し、<code>Cloud Functions for Firebase</code> へデプロイします。</p>\n<p>次に以下の <code>Cloud Scheduler</code> のコンソールから実行します。</p>\n<p><a href=\"https://console.cloud.google.com/cloudscheduler\" target=\"_blank\" rel=\"noopener noreferrer\">https://console.cloud.google.com/cloudscheduler</a></p>\n<p>右にある<code>Actions</code>から <code>Force run</code> をクリックすることでテストすることができます。</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/b7e5b17d4be5-20231122.png\" alt=\"\"></p>\n<p>無事に成功すると、</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/5125848e30dd-20231122.png\" alt=\"\"></p>\n<p>ディスコードに通知が届きました 🎉</p>\n<h2 id=\"️-定期実行時間の設定\" class=\"font-extrabold tracking-tighter break-word\">⏲️ 定期実行時間の設定</h2>\n<p>デフォルトでは以下のディレクトリに設定オプションが定義されています。</p>\n<p><code>functions/skeet/src/routings/options/scheduleOptions.ts</code></p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> { <span class=\"hljs-title class_\">ScheduleOptions</span> } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'firebase-functions/v2/scheduler'</span>\n<span class=\"hljs-keyword\">import</span> skeetOptions <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'../../../skeetOptions.json'</span>\n\n<span class=\"hljs-keyword\">const</span> appName = skeetOptions.<span class=\"hljs-property\">name</span>\n<span class=\"hljs-keyword\">const</span> project = skeetOptions.<span class=\"hljs-property\">projectId</span>\n<span class=\"hljs-keyword\">const</span> region = skeetOptions.<span class=\"hljs-property\">region</span>\n<span class=\"hljs-keyword\">const</span> serviceAccount = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${appName}</span>@<span class=\"hljs-subst\">${project}</span>.iam.gserviceaccount.com`</span>\n<span class=\"hljs-keyword\">const</span> vpcConnector = <span class=\"hljs-string\">`<span class=\"hljs-subst\">${appName}</span>-con`</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">scheduleDefaultOption</span>: <span class=\"hljs-title class_\">ScheduleOptions</span> = {\n  region,\n  <span class=\"hljs-attr\">schedule</span>: <span class=\"hljs-string\">'every 1 hours'</span>,\n  <span class=\"hljs-attr\">timeZone</span>: <span class=\"hljs-string\">'UTC'</span>,\n  <span class=\"hljs-attr\">retryCount</span>: <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">maxRetrySeconds</span>: <span class=\"hljs-number\">60</span>,\n  <span class=\"hljs-attr\">minBackoffSeconds</span>: <span class=\"hljs-number\">1</span>,\n  <span class=\"hljs-attr\">maxBackoffSeconds</span>: <span class=\"hljs-number\">10</span>,\n  serviceAccount,\n  <span class=\"hljs-attr\">timeoutSeconds</span>: <span class=\"hljs-number\">540</span>,\n  <span class=\"hljs-attr\">labels</span>: {\n    <span class=\"hljs-attr\">skeet</span>: <span class=\"hljs-string\">'schedule'</span>,\n  },\n}\n</code></pre>\n<p>デフォルトでは 毎時間に実行されるようになっているので、\n<code>schedule</code> の値を任意のものへ変更してください。</p>\n<p>schedule 設定の詳細</p>\n<p><a href=\"https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules\" target=\"_blank\" rel=\"noopener noreferrer\">https://cloud.google.com/scheduler/docs/configuring/cron-job-schedules</a></p>\n<h2 id=\"-ステイキング報酬監視用のエンドポイントの追加\" class=\"font-extrabold tracking-tighter break-word\">🌐 ステイキング報酬監視用のエンドポイントの追加</h2>\n<p>同様に、今度はステイキング報酬の確認用に新しい機能を追加します。</p>\n<pre><code class=\"hljs language-bash\">skeet add method stakeMonitor\n? Select Instance Type to add\n   = Instance Type =\n  http\n  firestore\n  pubsub\n❯ schedule\n  auth\n✔ ./functions/skeet/src/routings/schedule/stakeMonitor.ts created 🎉\n✔ Successfully exported to ./functions/skeet/src/index.ts 🎉\n</code></pre>\n<p><code>stakingMonitor</code> という <code>Cloud Functions for Firebase</code> のテンプレートが作成されました。</p>\n<p><code>stakingMonitor.ts</code></p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> { onSchedule } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'firebase-functions/v2/scheduler'</span>\n<span class=\"hljs-keyword\">import</span> { scheduleDefaultOption } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@/routings/options'</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> stakingMonitor = <span class=\"hljs-title function_\">onSchedule</span>(\n  scheduleDefaultOption,\n  <span class=\"hljs-keyword\">async</span> (event) => {\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'success'</span> })\n    } <span class=\"hljs-keyword\">catch</span> (error) {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'error'</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-title class_\">String</span>(error) })\n    }\n  }\n)\n</code></pre>\n<h2 id=\"-solana-の-rpc-エンドポイントについて\" class=\"font-extrabold tracking-tighter break-word\">🔗 Solana の RPC エンドポイントについて</h2>\n<p>Solana の公式 RPC エンドポイント <code>https://api.mainnet-beta.solana.com</code> はレート制限が設けられているため、より安定したデータアクセスを実現するにはプライベート RPC の使用が推奨されます。\nこの目的のために、私たちは Helius の RPC サービスを利用し、そのエンドポイント情報をシークレットマネージャーに安全に保存する方法を紹介します。</p>\n<p><a href=\"https://www.helius.dev/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.helius.dev/</a></p>\n<p>以下のコマンドを使用して、Helius RPC エンドポイントをシークレットマネージャーに登録します：</p>\n<pre><code class=\"hljs language-bash\">skeet add secret HELIUS_ENDPOINT\n? Enter a value <span class=\"hljs-keyword\">for</span> HELIUS_ENDPOINT [hidden]\n</code></pre>\n<p>この手順により、アプリケーションは Helius のプライベート RPC を通じて、より効率的に Solana ネットワークにアクセスし、レート制限の影響を受けずに安定したデータを取得できるようになります。</p>\n<h2 id=\"-ステイキング報酬監視用のロジックの追加\" class=\"font-extrabold tracking-tighter break-word\">💡 ステイキング報酬監視用のロジックの追加</h2>\n<p>そして以下のように、<code>stakingMonitor</code> を更新します。</p>\n<pre><code class=\"hljs language-ts\"><span class=\"hljs-keyword\">import</span> { onSchedule } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'firebase-functions/v2/scheduler'</span>\n<span class=\"hljs-keyword\">import</span> { schedulePublicOption } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@/routings/options'</span>\n<span class=\"hljs-keyword\">import</span> {\n  <span class=\"hljs-title class_\">RewardDataResponse</span>,\n  getAllStakeRewardsByPubkey,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@skeet-framework/solana-utils'</span>\n<span class=\"hljs-keyword\">import</span> { defineSecret } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'firebase-functions/params'</span>\n<span class=\"hljs-keyword\">import</span> { sendDiscord } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@skeet-framework/utils'</span>\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">DISCORD_WEBHOOK_URL</span> = <span class=\"hljs-title function_\">defineSecret</span>(<span class=\"hljs-string\">'DISCORD_WEBHOOK_URL'</span>)\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-variable constant_\">HELIUS_ENDPOINT</span> = <span class=\"hljs-title function_\">defineSecret</span>(<span class=\"hljs-string\">'HELIUS_ENDPOINT'</span>)\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">const</span> stakeMonitor = <span class=\"hljs-title function_\">onSchedule</span>(\n  { ...schedulePublicOption, <span class=\"hljs-attr\">secrets</span>: [<span class=\"hljs-variable constant_\">DISCORD_WEBHOOK_URL</span>, <span class=\"hljs-variable constant_\">HELIUS_ENDPOINT</span>] },\n  <span class=\"hljs-keyword\">async</span> (event) => {\n    <span class=\"hljs-keyword\">try</span> {\n      <span class=\"hljs-keyword\">const</span> walletPubkey = <span class=\"hljs-string\">'LKnGHsjr7UYBXnzfbrz4k6QotCz56rMQTSiVwdRSyL9'</span>\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-attr\">result</span>: <span class=\"hljs-title class_\">RewardDataResponse</span> = <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">getAllStakeRewardsByPubkey</span>(\n        <span class=\"hljs-variable constant_\">HELIUS_ENDPOINT</span>.<span class=\"hljs-title function_\">value</span>(),\n        walletPubkey\n      )\n      <span class=\"hljs-keyword\">const</span> content = <span class=\"hljs-string\">`Account: <span class=\"hljs-subst\">${walletPubkey}</span>\nEpoch: <span class=\"hljs-subst\">${result.epoch}</span>\nReward: <span class=\"hljs-subst\">${result.totalRewardAmount}</span> SOL\nTotal SOL: <span class=\"hljs-subst\">${result.totalBalance}</span> SOL\n`</span>\n      <span class=\"hljs-keyword\">await</span> <span class=\"hljs-title function_\">sendDiscord</span>(content, {\n        <span class=\"hljs-attr\">webhookUrl</span>: <span class=\"hljs-variable constant_\">DISCORD_WEBHOOK_URL</span>.<span class=\"hljs-title function_\">value</span>(),\n        <span class=\"hljs-attr\">username</span>: <span class=\"hljs-string\">'Skeet Staking Monitor'</span>,\n      })\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'success'</span> })\n    } <span class=\"hljs-keyword\">catch</span> (error) {\n      <span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>({ <span class=\"hljs-attr\">status</span>: <span class=\"hljs-string\">'error'</span>, <span class=\"hljs-attr\">message</span>: <span class=\"hljs-title class_\">String</span>(error) })\n    }\n  }\n)\n</code></pre>\n<h2 id=\"-ステイキング報酬監視用のロジックのデプロイ\" class=\"font-extrabold tracking-tighter break-word\">📤 ステイキング報酬監視用のロジックのデプロイ</h2>\n<p>同様に <code>skeet deploy</code> コマンドでモニターアプリをデプロイします。</p>\n<pre><code class=\"hljs language-bash\">skeet deploy --<span class=\"hljs-keyword\">function</span> skeet:stakeMonitor\n</code></pre>\n<p><code>--function</code> オプションをつけてデプロイする functions を指定することもできます。</p>\n<p>同様に、Cloud Scheduler から実行してみます。</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/446a191fdf48-20231123.png\" alt=\"\"></p>\n<p>無事に通知が届きました 🎉</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/7ba0331573c5-20231123.png\" alt=\"\"></p>\n<p>次の章では <code>Firestrore</code>　と <code>Google スプレッドシート</code>　を使ってより便利にデータを管理していきたいと思います。</p>","title":"第3章: 🌐💰 クラウド活用の全貌: Solana バリデーターの効率的モニタリングとステイキングリワードの管理 🚀🔍 | solv - Solana バリデーター・RPCノードを簡単に立ち上げ、手間なく管理するオープンソースツール","seoData":[{"property":"og:title","content":"第3章: 🌐💰 クラウド活用の全貌: Solana バリデーターの効率的モニタリングとステイキングリワードの管理 🚀🔍 | solv - Solana バリデーター・RPCノードを簡単に立ち上げ、手間なく管理するオープンソースツール"},{"name":"twitter:title","content":"第3章: 🌐💰 クラウド活用の全貌: Solana バリデーターの効率的モニタリングとステイキングリワードの管理 🚀🔍 | solv - Solana バリデーター・RPCノードを簡単に立ち上げ、手間なく管理するオープンソースツール"},{"name":"twitter:text:title","content":"第3章: 🌐💰 クラウド活用の全貌: Solana バリデーターの効率的モニタリングとステイキングリワードの管理 🚀🔍 | solv - Solana バリデーター・RPCノードを簡単に立ち上げ、手間なく管理するオープンソースツール"},{"name":"description","content":"この章では、クラウドの力を最大限に活用して、Solana バリデーターのモニタリングとステイキングリワードの管理を効率的に行う方法を探ります。"},{"property":"og:description","content":"この章では、クラウドの力を最大限に活用して、Solana バリデーターのモニタリングとステイキングリワードの管理を効率的に行う方法を探ります。"},{"name":"twitter:description","content":"この章では、クラウドの力を最大限に活用して、Solana バリデーターのモニタリングとステイキングリワードの管理を効率的に行う方法を探ります。"},{"property":"og:url","content":"https://solv.epics.dev/ja/doc/tutorial/chapter3"},{"property":"og:image","content":"https://solv.epics.dev/ogp.png"},{"property":"og:image:secure","content":"https://solv.epics.dev/ogp.png"},{"name":"twitter:image","content":"https://solv.epics.dev/ogp.png"}],"_nextI18Next":{"initialI18nStore":{"ja":{"common":{"contactToTeam":"チームに相談","privacy":"プライバシーポリシー","404title":"ページが見つかりませんでした","404body":"すみません、お探しのページは見つかりませんでした。","backToTop":"トップページに戻る","toc":"目次","openMenu":"メニューを開く","closeMenu":"メニューを閉じる","media":"メディア","news":"ニュース","books":"本","copy":"コピー","copied":"コピーしました!","solvInstall":"solvのインストール","updateSettings":"設定の更新","setupSolv":"セットアップ","thatsAll":"完了!","navs":{"defaultMainNav":{"quickstart":"クイックスタート","news":"ニュース","doc":"ドキュメント","dao":"DAO","enterprise":"エンタープライズ","contact":"お問い合わせ"},"commonFooterNav":{"quickstart":"クイックスタート","news":"ニュース","doc":"ドキュメント","enterprise":"エンタープライズ","dao":"DAO","contact":"お問い合わせ","privacy":"プライバシーポリシー","press-kits":"プレスキット"}},"AgreeToPolicy":{"title":"クッキーについて","body":"私達および私達のサードパーティパートナーは、Cookie および類似の技術を使用して、IP アドレスやデジタル識別子などの特定の情報を処理し、サイトの使用状況を分析し、ユーザー体験向上に努めます。 詳しくはプライバシーポリシーをお読みください。","yes":"はい、承諾します","no":"いいえ、やめてください"},"ContactRow":{"discord":{"title":"コミュニティ Discord","body":"各種お問い合わせ等ございましたらコミュニティDiscord内にてサポートチケットを作成してください。","button":"JOIN"},"form":{"title":"チームに相談","body":"開発やサポートについて等、各種お問い合わせございましたらこちらからなんでもご相談ください。","button":"Go"}},"CTASectionRow":{"title":"Solana バリデータ向けユーティリティツール","body":"solv は Solana バリデータ及びRPCノードのセットアップと運用を簡略化するためのオープンソースツールです。","button":"クイックスタート","demo":"デモを試す"},"WhyOpenSourceDevelopmentRow":{"subtitle":"なぜオープンソース開発なのか？","title":"持続可能なテクノロジーの発展と社会全体の利益","description":"オープンソースソフトウェア (OSS) 開発は、現代社会において技術進歩を牽引し、新たな価値創出を可能にしています。","feature1":{"title":"公共財としての価値","description":"オープンソースソフトウェアは、誰でも自由に利用、改良、再配布することができます。これにより、OSSは全人類に対する公共財となるのです。経済的な制約を感じずに、世界中の人々がその価値を享受できます。その結果、社会全体のイノベーションが推進され、デジタル社会の平等性と包括性が増大します。"},"feature2":{"title":"グローバルな協力体制","description":"OSSの世界では、地域や組織の境界を越えて、全世界の開発者が共同でソフトウェアを改善していきます。各人が持つ視点や専門知識がプロジェクトに取り込まれ、その質を高めることが可能となります。OSSはまさにグローバルな知識と経験の集まる場所であり、それが絶えず高品質のソフトウェアを生み出します。"},"feature3":{"title":"車輪の再発明の防止","description":"OSSはコードを再利用することを可能にし、車輪の再発明を防止します。その結果、開発者は一から全てを作り出す労力を減らし、より具体的な問題解決や新たな機能の開発に焦点を合わせることができます。これにより効率性が高まり、より速く、より質の高い成果を生み出すことが可能となります。"}},"RoadmapRow":{"2022.6":"Epics ライトペーパー, TGE(トークンジェネレートイベント)","2022.7":"Epics ジェネシスプリセール","2022.8":"Epics ホワイトペーパー v1","2022.9":"Epics Alpha ローンチ, Solana Summer Camp ハッカソン5位入賞","2022.10":"プリセール for IDO, オランダ政府よりWBSO(先端研究開発プロジェクト)認定","2022.11":"Solana Breakpoint, GitHub issue データオラクル連携開発 (DIA)","2023.1":"IDO $EPCT on Orca (Solana DEX)","2023.4":"Epics DAOがSolanaのテストネットバリデーターに","2023.9":"シードエクステンションラウンド資金調達","2023.12":"Epics プラットフォーム Beta ローンチ","2024.2":"$EPCT が Meteora (Solana DEX) に上場","2024.4":"NFT カードデザイン発表、ニコニコ超会議 2024 出展, ENASE 2024 研究発表","2024.5":"Epics DAOがSolanaのメインネットバリデーターに","2024.8":"NFTカードゲームβテスト開始、Web X 2024 出展","2024.10":"シリーズ A 資金調達、EPCD交換所ローンチ","2025.4":"Epicsプラットフォームメジャーリリース、NFTカードゲーム一般公開開始","2025.9":"シリーズ B 資金調達","2026.4":"IEO $EPCT"},"OurWorksRow":{"WBSO":{"title":"オランダ政府よりWBSO(先端科学技術研究)の認定を受けました","description":"Epics DAOは、オランダ政府よりWBSO(先端科学技術研究)の認定を受けました。Epicsは社会貢献型ブロックチェーンゲーム(BCG)で、持続可能なオープンソース開発環境の実現を目指しています。"},"SolanaValidator":{"title":"Solanaブロックチェーンのバリデーターを運営しています","description":"Epics DAOは、Solana チェーンにおけるバリデーターとして、ネットワークの信頼性と安定性を担保することに尽力します。Solana の高速かつ安定したネットワークを実現するための技術的な側面についても貢献します。"},"SolanaSummerCamp":{"title":"Solana Summer Campハッカソン2022において5位入賞しました","description":"Epics DAO は、2022 年 7 月 11 日 - 8 月 16 日に開催された Solana サマーキャンプハッカソンにおいて、18,000 を超える応募の中、 5 位に入賞いたしました。"},"GoogleWeb3":{"title":"エルソウルラボはGoogle Web3 Startupsプログラムに認定されました","description":"エルソウルラボのWeb3分野における活動のEpics DAO、solvやSkeet等のオープンソース開発を応援する取り組みが認められ、Google Cloud Web3 Startupsプログラムに選出されました。"},"ENASE2024":{"title":"AI・サーバーレス「Skeet」の研究論文が国際会議のENASE2024に採択されました","description":"研究論文「Skeet: Towards a Lightweight Serverless Framework Supporting Modern AI-Driven App Development」について、ソフトウェアエンジニアリングに関する国際会議 ENASE 2024 に採択されました。"},"CHOKAIGI2024":{"title":"Epics DAOがニコニコ超会議2024に出展しました","description":"Epics DAO は、2024 年 4 月 27 日 - 28 日に開催されたニコニコ超会議2024に出展し、限定NFTの配布等を行いました。来場者数は 12 万 5362 人で大盛況の中、無事イベントの終幕を迎えました。"},"WebX2024":{"title":"Epics DAOは WebX 2024 スポンサーです","description":"WebX 2024 は暗号資産やブロックチェーンを含むWeb3の最先端技術に焦点を当てたアジア最大級のイベントで、唯一政府や既存企業とIP企業、Web3企業と交流できるカンファレンスです。"}},"SolvTutorialYouTubeRow":{"title":"Solana バリデーター完全ガイド","subtitle":"YouTube チュートリアル","description":"solv を活用し簡単に Solana バリデーター運用を始めるための完全ガイドを公開いたしました。すでに Solana バリデーターを運用中の方も、ノーダウンタイム移行やスナップショットダウンロードの高速化のメリットのため、solv に簡単に移行していただくことが可能です。"},"SolanaBreakpointSideEventRow":{"title":"Solana バリデーターハンズオン","description":"Solana バリデーターの世界を探求しましょう！この初心者向けのワークショップでは、Latitudeのクラウドサーバーを使用してSolana バリデーターを実際に立ち上げてみることができます。バリデーターはトランザクションを処理、ネットワークを保護し、報酬を獲得します。イベント限定の無料クレジットで、バリデーター運用の実践的な経験を得ることができます。Solana バリデーターのインセンティブ化された世界に飛び込み、学び、交流する機会です。","link":"イベント詳細"},"LatitudeCouponRow":{"subtitle":"ベアメタルクラウドで今すぐお試し","title":"Latitude トライアルクレジットクーポン","description":"Latitude 社 とのパートナーシップにより、$100 分の無料クレジットクーポンを提供することができるようになりました。このクーポンを利用することで、あなたは今すぐに solv を使って Solana バリデーターを実際に手元で試すことができます。","register":"クーポンを登録","couponCode":"クーポンコード"},"StakeForOpenSourceRow":{"subtitle":"オープンソース開発の未来にステークを","title":"ステーク報酬を獲得しながらオープンソース開発を応援しましょう","description":"※ これらは投資助言などを目的としたものではありません。また、記載された情報は、執筆時点のものです。最新の情報をご確認ください。常に NFA / DYOR でお願いいたします。","feature1":{"title":"Solana メインネットバリデーター","description":"Epics DAOが運用するSolanaメインネットバリデーターはステークユーザー様に対する手数料を0%で運営しているため、SOLトークンのステーク報酬は、APR(年利、2024年5月16日現在) 7.58% となっております。Solana ネットワーク分散化への貢献、及び世界中でイノベーションを可能にするため、ノードやデータセンターが少ないエリアに重点を置いて運用を行ってまいります。","button":"バリデーター詳細へ"},"feature2":{"title":"Buidlers Collective (BDLC) NFT","description":"BDLC NFT を Epics プラットフォームにてステークすると、$EPCT トークン報酬を獲得でき、さらに同額の $EPCT がステーク先のオープンソースプロジェクトに寄付され、将来の開発に活用されます。ブロックチェーンを活用して社会貢献型の NFT ステーキング、そして No Loss Donation(元本を失わずステーキング報酬を寄付する)を実現させる取り組みです。","button":"NFT マーケットへ"}},"NicoNicoChoKaigi2024Row":{"subtitle":"超チンチロリン in ニコニコ超会議2024","title":"ご来場ありがとうございました！","description":"Epics DAO は、2024 年 4 月 27 日 - 28 日に幕張メッセにて開催されたニコニコ超会議2024に出展し、来場者限定NFTの配布を行いました。ニコニコ超会議2024の来場者数は 12 万 5362 人、Epics DAO の超チンチロリンブースには約3,000人お越しいただき、大盛況の中無事イベントの終幕を迎えました。"},"WebX2024Row":{"title":"WebX 2024 スポンサー決定","description":"Epics DAO は、WebX 2024 にスポンサーとして参画いたします。WebXは暗号資産やブロックチェーンを含むWeb3の最先端技術に焦点を当てたアジア最大級のイベントで、唯一政府や既存企業とIP企業、Web3企業と交流できるカンファレンスです。","discountLink":"スポンサー特典割引チケット"}},"doc":{"title":"solv ドキュメント","body":"オープンソースの Solana バリデーター向けツール","previousPage":"前のページ","nextPage":"次のページ","actions":{"motivation":{"title":"モチベーション","body":"すべてのSolanaバリデーター、そしてSolanaコミュニティ、オープンソース開発コミュニティにとって有益であると信じてオープンソースとして公開しています。"},"quickstart":{"title":"クイックスタート","body":"solv を使い始めるための簡単3ステップについて説明します。"},"tutorial":{"title":"チュートリアル","body":"solv を使って実際にSolanaバリデーターの運用をスタートするためのガイドです。"},"update":{"title":"ノーダウンタイムアップデート","body":"ダウンタイム無くバリデーターノードを移行する方法を説明します。日々のアップデートにも引っ越しにも有効です。"}},"menuNav":{"home":"ドキュメント ホーム","general":{"groupTitle":"全般","motivation":"モチベーション","quickstart":"クイックスタート"},"quickstart":{"groupTitle":"クイックスタート","start-solv":"solv をはじめる","solv-mev-mode":"solv MEV モード","no-downtime-update":"ノーダウンタイムアップデート"},"tutorial":{"groupTitle":"チュートリアル","chapter1":"1. Solana バリデーター構築","chapter2":"2. バックアップと移転","chapter3":"3. クラウドと Solana 監視","chapter4":"4. 収益管理と分析","chapter5":"5. RPC ノードの構築"}},"headerNav":{"home":"ホームページ","news":"ニュース"}}},"en":{"common":{"contactToTeam":"Talk with Team","privacy":"Privacy","404title":"Page not found","404body":"Sorry, we couldn't find the page you're looking for.","backToTop":"Back to top page","toc":"Table of Contents","openMenu":"Open menu","closeMenu":"Close menu","media":"Media","news":"News","books":"Books","copy":"Copy","copied":"Copied!","solvInstall":"Install solv","updateSettings":"Update settings","setupSolv":"Setup","thatsAll":"That's all!","navs":{"defaultMainNav":{"quickstart":"Quickstart","news":"News","doc":"Docs","dao":"DAO","enterprise":"Enterprise","contact":"Contact"},"commonFooterNav":{"quickstart":"Quickstart","news":"News","doc":"Docs","enterprise":"Enterprise","dao":"DAO","contact":"Contact","privacy":"Privacy","press-kits":"Press Kits"}},"AgreeToPolicy":{"title":"Your Choices Regarding Cookies","body":"We and our third party partners use cookies and similar technologies to process certain information, such as your IP address and digital identifiers, to analyze site usage and provide you better experiences. Please read our privacy policy for the detail.","yes":"Yes, I Accept","no":"No, I Do Not Accept"},"ContactRow":{"discord":{"title":"Community Discord","body":"If you have any inquiries, please create a support ticket in the community Discord.","button":"JOIN"},"form":{"title":"Talk with Team","body":"If you have any inquiries about development and support, please get in touch with us from here.","button":"Go"}},"CTASectionRow":{"title":"The utility tool for Solana Validators","body":"solv is an open-source tool designed to simplify the setup and operation of Solana validators and RPC nodes.","button":"Get Started","demo":"Try Demo"},"WhyOpenSourceDevelopmentRow":{"subtitle":"Why Open-Source Software?","title":"Sustainable technology development and benefits for society as a whole","description":"Open-source software (OSS) development drives technological progress in modern society and enables new value creation.","feature1":{"title":"Value as a public good","description":"Open-source software is free for anyone to use, improve, and redistribute. This makes OSS a public good for all mankind. People all over the world can enjoy its value without feeling financially constrained. As a result, innovation across society will be driven, and the equality and inclusiveness of the digital society will increase."},"feature2":{"title":"Global cooperation","description":"In the world of OSS, developers all over the world work together to improve software beyond the boundaries of regions and organizations. Each person's perspective and expertise can be incorporated into the project, enhancing its quality. OSS is truly a global gathering place of knowledge and experience that consistently produces high-quality software."},"feature3":{"title":"Preventing reinvention of the wheel","description":"OSS allows us to reuse code and prevents us from reinventing the wheel. As a result, developers can focus less on creating everything from scratch and more on solving specific problems and developing new features. This increases efficiency and enables faster higher-quality results."}},"RoadmapRow":{"2022.6":"Epics Lite Paper, TGE (Token Generate Event)","2022.7":"Epics GENESIS presale","2022.8":"Epics White Paper v1","2022.9":"Epics Alpha launch, Solana Summer Camp Hackathon 5th prize","2022.10":"Presale for IDO, WBSO (Advanced R&D) certified by the Dutch government","2022.11":"Solana Breakpoint, GitHub issue Data Oracle Collaborative Development (DIA)","2023.1":"IDO $EPCT on Orca (Solana DEX)","2023.4":"Epics DAO became a Solana Testnet Validator","2023.9":"Seed Extension Round Fundraising","2023.12":"Epics Platform Beta Launch","2024.2":"$EPCT Listed on Meteora (Solana DEX)","2024.4":"NFT Card Design Reveal, NICONICO CHOKAIGI 2024, ENASE 2024","2024.5":"Epics DAO became a Solana mainnet validator","2024.8":"NFT Card Game β Test Begins, WebX 2024","2024.10":"Series A fundraising, EPCD Exchange Launch","2025.4":"Major Release of Epics Platform, General Release of the NFT Card Game","2025.9":"Series B Fundraising","2026.4":"IEO $EPCT"},"OurWorksRow":{"WBSO":{"title":"WBSO accreditation from the Dutch government","description":"Epics DAO has received WBSO (Advanced Science and Technology Research) accreditation from the Dutch government. Epics is a social contribution blockchain game (BCG) that aims to realize a sustainable open-source development environment."},"SolanaValidator":{"title":"We operate a validator for the Solana blockchain","description":"As a validator on the Solana chain, Epics DAO is committed to ensuring the reliability and stability of the network. We will also contribute to the technical aspects of achieving Solana's fast and stable network."},"SolanaSummerCamp":{"title":"Placed 5th at Solana Summer Camp Hackathon 2022","description":"Epics DAO won 5th place out of over 18,000 entries at the Solana Summer Camp Hackathon held July 11-August 16, 2022."},"GoogleWeb3":{"title":"ELSOUL LABO has been certified by Google Web3 Startups program","description":"ELSOUL LABO's activities in the Web3 sector, including Epics DAO, and support for open-source development initiatives such as solv and Skeet, have been recognized and selected for the Google Cloud Web3 Startups program."},"ENASE2024":{"title":"Research Paper on AI & Serverless 'Skeet' Accepted for ENASE 2024","description":"The research paper 'Skeet: Towards a Lightweight Serverless Framework Supporting Modern AI-Driven App Development' has been accepted for presentation at the international conference on software engineering, ENASE 2024."},"CHOKAIGI2024":{"title":"Epics DAO Exhibits at CHOKAIGI 2024","description":"Epics DAO exhibited at CHOKAIGI 2024, held on April 27th - 28th, 2024, distributing limited edition NFTs and more. With a total attendance of 125,362 visitors, the event concluded successfully."},"WebX2024":{"title":"Epics DAO is a WebX 2024 Sponsor","description":"WebX 2024 is the largest event in Asia focused on cutting-edge technologies in Web3, including cryptocurrencies and blockchain. It is the only conference where government bodies, established companies, IP firms, and Web3 businesses can interact."}},"SolvTutorialYouTubeRow":{"title":"Complete Guide to Solana Validators","subtitle":"YouTube Tutorial","description":"We have released a comprehensive guide to easily start operating a Solana validator using solv. For those already running a Solana validator, you can easily switch to solv to benefit from no-downtime transitions and accelerated snapshot downloads."},"SolanaBreakpointSideEventRow":{"title":"Solana Validator Hands-On Workshop","description":"Join us to explore the realm of Solana Validators! This beginner-friendly workshop allows you to launch a Solana Validator using Latitude's cloud servers. Validators process transactions and secure the network, earning rewards. You'll get hands-on experience, unraveling the operational essence of validators while enjoying event-exclusive free credits. It's a chance to learn, interact, and dive into the incentivized world of Solana Validators. Looking forward to engaging in discussions. See you there!","link":"Event Detail"},"LatitudeCouponRow":{"subtitle":"Try it now on Bare Metal Cloud","title":"Latitude Trial Credit Coupon","description":"Through our partnership with Latitude, we are now able to offer a $100 credit coupon. By utilizing this coupon, you can actually try out launching a Solana validator with solv at hand right now.","register":"Register Coupon","couponCode":"Coupon Code"},"StakeForOpenSourceRow":{"subtitle":"Stake for the future of Open-Source Development","title":"Let's support Open-Source Development while earning staking rewards.","description":"※ These are not intended for investment advice. The information are based on the situation at the time of writing. Please check for the most current information. Always NFA/DYOR.","feature1":{"title":"Solana Mainnet Validator","description":"Epics DAO operates a Solana mainnet validator with a 0% fee for users who stake their SOL tokens, resulting in a stake reward with an annual percentage rate (APR) of 7.58% as of May 16, 2024. To contribute to the decentralization of the Solana network and enable innovation worldwide, we will focus our operations in areas with fewer nodes and data centers.","button":"Go to Validator Detail"},"feature2":{"title":"Buidlers Collective (BDLC) NFT","description":"When you stake BDLC NFTs on the Epics platform, you can earn $EPCT token rewards. Additionally, an equivalent amount of $EPCT is donated to the open-source project where the NFTs are staked, to be used for future development. This initiative utilizes blockchain technology to enable socially beneficial NFT staking and No Loss Donation, where staking rewards are donated without losing the principal.","button":"Go to NFT Marketplace"}},"NicoNicoChoKaigi2024Row":{"subtitle":"Cho Dice Roll in NICONICO CHOKAIGI 2024","title":"Thank you for visiting!","description":"Epics DAO participated in Nico Nico Chokaigi 2024, held at Makuhari Messe on April 27th and 28th, and distributed limited edition NFTs to visitors. The event attracted a total of 125,362 attendees, with about 3,000 people visiting the Epics DAO Cho Dice Roll booth, successfully concluding the event with great fanfare."},"WebX2024Row":{"title":"WebX 2024 Sponsor Confirmed","description":"Epics DAO will participate as a sponsor at WebX 2024. WebX is the largest event in Asia focused on cutting-edge technologies in Web3, including cryptocurrencies and blockchain. It is the only conference where government bodies, established companies, IP firms, and Web3 businesses can interact.","discountLink":"Sponsor Discount Tickets"}},"doc":{"title":"solv Document","body":"Open-Source Solana Validator Utility Tool","previousPage":"Previous page","nextPage":"Next page","actions":{"motivation":{"title":"Motivation","body":"We believe it to be beneficial for all Solana validators, as well as the Solana community and the open-source development community, and have released it as open-source accordingly."},"quickstart":{"title":"Quickstart","body":"Learn to use solv in three easy steps! This guide quickly introduces you to the essentials of the solv."},"tutorial":{"title":"Tutorial","body":"A guide to actually starting the operation of a Solana validator using solv."},"update":{"title":"No Downtime Update","body":"Explains how to migrate validator nodes without downtime. It's effective for daily updates as well as moving operations."}},"menuNav":{"home":"Docs Home","general":{"groupTitle":"General","motivation":"Motivation","quickstart":"Quickstart"},"quickstart":{"groupTitle":"Quickstart","start-solv":"Start solv","solv-mev-mode":"solv MEV Mode","no-downtime-update":"No Downtime Update"},"tutorial":{"groupTitle":"Tutorial","chapter1":"1. Solana Setup","chapter2":"2. Backup & Migrate","chapter3":"3. Cloud & Monitor","chapter4":"4. Revenue Analysis","chapter5":"5. Setup RPC Node"}},"headerNav":{"home":"solv Home","news":"News"}}}},"initialLocale":"ja","ns":["common","doc"],"userConfig":{"i18n":{"defaultLocale":"en","locales":["en","ja"]},"default":{"i18n":{"defaultLocale":"en","locales":["en","ja"]}}}}},"__N_SSG":true}